1. 对于csapp 2rd的源码，通过调试发现对于firefox和telnet能正常运行，而对于chrome出现奇怪现象，即使提交一次URL请求，web服务器在接受并调用了CGI脚本以及回收运行脚本的子进程之后再进行accept并不阻塞，这导致了后面的异常。 由于老师安排了别的任务时间有限，暂且放下，猜测是chrome并不完全按照书上所讲的HTTP协议的，所以后面的调试是基于firefox和telnet运行结果。
2.改变了父进程在fork以允许CGI脚本之后的Wait操作而是利用SIGCHLD信号并编写信号响应程序进行回收，提高一点性能。
3.由于没有自定义SIGPIPE的信号处理程序，所以当收到SIGPIPE信号（client提早关闭了连接，web服务器第二次写的时候）之后，程序会退出，这是绝对不允许的。所以增加了捕获了SIGPIPE的信号处理程序，在两处：1是父进程中，接受到后关闭连接描述符，继续accept，2是子进程的CGI脚本中(一个知识点，在fork并execve之后对于信号的响应恢复默认，所以不需要显式这样做）。
